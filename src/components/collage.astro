---
import Image from "astro/components/Image.astro";
import type { GalleryPic } from "../types";
import { Images } from "../data/Images";

const pageName = Astro.props["name"];
const images = Images[pageName] || [];
---

<div id="collage" class="flex flex-wrap w-full max-w-screen gap-[12px] ml-[12px]">
    {
        images.map((image: GalleryPic) => {
            return (
                <Image
                    src={image.src}
                    alt={image.alt}
                    width={image.width! * 0.8}
                    height={image.height! * 0.8}
                    data-orientation={image.orientation}
                    class=""
                    loading="eager"
                />
            );
        })
    }
</div>
<script> 
    function updateCollageWidth() {
        const screenWidth = (window.innerWidth - window.innerWidth * 0.1);
        let imgAmount = 0;
        if (window.innerWidth >= 1280) imgAmount = 4;
        else imgAmount = 1;

        const HOR_WIDTH = 1126 * 0.8
        const VER_WIDTH = (HOR_WIDTH / 2)
        const HEIGHT = 752 * 0.8

        const IMG_CONTAINER = (screenWidth / imgAmount) - 12; // 24px is the gap between images
        const SCALE = IMG_CONTAINER / HOR_WIDTH;

        const collage = document.getElementById("collage");
        if (!collage) return;
        collage.style.width = `${screenWidth}px`;
        const images = collage.querySelectorAll("img");
        images.forEach((img) => {
            const orientation = img.dataset.orientation;
            img.style.width = `${(orientation === "hor" ? SCALE*HOR_WIDTH :  SCALE*VER_WIDTH - 6)}px`;
            img.style.height = `${HEIGHT * SCALE}px`;
        });
    }

    document.addEventListener("DOMContentLoaded", () => {
        updateCollageWidth();
        window.addEventListener("resize", updateCollageWidth);
    });
</script>